<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:sns="http://www.mulesoft.org/schema/mule/sns" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs" xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sns http://www.mulesoft.org/schema/mule/sns/current/mule-sns.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" basePath="files" doc:name="HTTP Listener Configuration"/>
    <s3:config name="Amazon_S3__Configuration" accessKey="AKIAJ3S26VC5EW3RVFQA" secretKey="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" doc:name="Amazon S3: Configuration"/>
    <sqs:config name="Amazon_SQS__Configuration" accessKey="AKIAJ3S26VC5EW3RVFQA" secretKey="zZUGQH5u84YvYbxWs1jmQUL4yej83FMUglUZ5g+B" defaultQueueName="sampleQueue" url="https://sqs.ap-southeast-1.amazonaws.com/641393358551/sampleQueue" region="APSOUTHEAST1" doc:name="Amazon SQS: Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="developer.mulesoft.com" port="80" doc:name="HTTP Request Configuration"/>
    <sns:config name="Amazon_SNS__Configuration" accessKey="AKIAJ3S26VC5EW3RVFQA" secretKey="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" region="APSOUTHEAST1" testTopicArn="arn:aws:sns:ap-southeast-1:641393358551:FileCreationTopic" doc:name="Amazon SNS: Configuration"/>
    <file:connector name="File" autoDelete="true" streaming="true" validateConnections="true" doc:name="File"/>
    <byte-array-to-string-transformer returnClass="java.lang.String" name="Byte_Array_to_String" doc:name="Byte Array to String"/>
    <json:object-to-json-transformer name="Object_to_JSON" doc:name="Object to JSON"/>
    <flow name="FileUploadToAwsS3">
    	
        <file:inbound-endpoint path="${s3.sourceFileLocation}" moveToPattern="#[message.inboundProperties.originalFilename + message.inboundProperties.timestamp]" moveToDirectory="${s3.destFileLocation}" connector-ref="File" responseTimeout="10000" doc:name="File"  transformer-refs="Byte_Array_to_String">
        	
            <file:filename-regex-filter pattern=".*\.txt" caseSensitive="true"/>
        </file:inbound-endpoint>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="filePayload" value="#[payload]" doc:name="Session Variable"/>
        <s3:list-objects config-ref="Amazon_S3__Configuration" bucketName="${s3.folder}" doc:name="Listing S3 Objects"/>
        <expression-transformer returnClass="java.util.ArrayList" expression="payload.getObjectSummaries();" doc:name="Fetching object list"/>
        <foreach doc:name="For Each Object In the S3 Bucket">
            <json:object-to-json-transformer doc:name="Object to JSON"/>
            <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
            <choice doc:name="If File Exists... Else...">
                <when expression="payload.key==message.inboundProperties.originalFilename">
                    <flow-ref name="fileBackup_SubFlow" doc:name="fileBackup_SubFlow"/>
                    <logger message="========== After Backup &amp; Before Delete============================" level="INFO" doc:name="Logger"/>
                    <flow-ref name="fileDelete_SubFlow" doc:name="fileDelete_SubFlow"/>
                    <logger message="==============File Delete===========================" level="INFO" doc:name="Logger"/>
                </when>
                <otherwise>
                    <logger message="************************** File #[flowVars.counter]  does not exists ********************************" level="INFO" category="	" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
        <flow-ref name="fileUpload_SubFlow" doc:name="fileUpload_SubFlow"/>
        <logger message="End of file reading" level="INFO" doc:name="Logger"/>
    </flow>
    <sub-flow name="fileUpload_SubFlow">
    	<logger message="^^^^^^${s3.folder}  ^^^^^^^^^#[message.inboundProperties.originalFilename] ^^^^^ #[sessionVars.filePayload]" level="INFO" doc:name="Logger"/>
        <s3:create-object config-ref="Amazon_S3__Configuration" bucketName="${s3.folder}" key="#[message.inboundProperties.originalFilename]" content-ref="#[sessionVars.filePayload]" acl="PUBLIC_READ_WRITE" doc:name="Upload file into S3"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-payload value="#[message.payloadAs(java.lang.String)]" doc:name="Set Payload"/>
    </sub-flow>
    <sub-flow name="fileBackup_SubFlow">
    	<logger message="============== Inside Backup=====================" level="INFO" doc:name="Logger"/>
        <s3:copy-object config-ref="Amazon_S3__Configuration" sourceBucketName="${s3.folder}" sourceKey="#[message.inboundProperties.originalFilename]" destinationBucketName="${s3.folder}-bkp" destinationKey="#[message.inboundProperties.originalFilename + message.inboundProperties.timestamp]" doc:name="Amazon S3" destinationAcl="PUBLIC_READ_WRITE"/>
        <logger level="INFO" doc:name="Logger" message="==========After File Backup ========================"/>
    </sub-flow>
    <sub-flow name="fileDelete_SubFlow">
    	<logger message="================Inside FileDelete=======================" level="INFO" doc:name="Logger"/>
        <s3:delete-object config-ref="Amazon_S3__Configuration" bucketName="${s3.folder}" key="#[message.inboundProperties.originalFilename]" doc:name="Amazon S3"/>
        <logger level="INFO" doc:name="Logger" message="=========== After File Delete ============================"/>
    </sub-flow>
</mule>
